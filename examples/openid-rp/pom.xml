<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.jboss.seam.security</groupId>
   <artifactId>seam-security-example-openid-rp</artifactId>
   <packaging>war</packaging>
   <name>OpenID Relying Party</name>

   <parent>
      <groupId>org.jboss.seam.security</groupId>
      <artifactId>seam-security-parent</artifactId>
      <version>3.1.0-SNAPSHOT</version>
      <relativePath>../../pom.xml</relativePath>
   </parent>

   <build>
      <finalName>security-openid-rp</finalName>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <skip>true</skip>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <dependencies>

      <dependency>
         <groupId>org.jboss.seam.security</groupId>
         <artifactId>seam-security-external</artifactId>
         <version>${project.version}</version>
      </dependency>
      
      <dependency>
         <groupId>org.jboss.seam.security</groupId>
         <artifactId>seam-security</artifactId>
         <version>${project.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.seam.servlet</groupId>
         <artifactId>seam-servlet</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.seam.config</groupId>
         <artifactId>seam-config-xml</artifactId>
      </dependency>

      <dependency>
         <groupId>joda-time</groupId>
         <artifactId>joda-time</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <!-- This is necessary until a new JSF-API is published to central -->
         <groupId>javax.faces</groupId>
         <artifactId>jsf-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <!-- Required until the Servlet 3.0 API can be resolved in Central -->
         <groupId>org.jboss.spec.javax.servlet</groupId>
         <artifactId>jboss-servlet-api_3.0_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.seleniumhq.selenium.client-drivers</groupId>
         <artifactId>selenium-java-client-driver</artifactId>
         <version>${selenium.java.client.version}</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.test</groupId>
         <artifactId>richfaces-selenium</artifactId>
         <version>${richfaces.selenium.version}</version>
         <scope>test</scope>
      </dependency>

   </dependencies>
   
   <profiles>
      <profile>
         <id>distribution</id>
         <activation>
            <property>
               <name>release</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
               </plugin>
            </plugins>
         </build>
      </profile> 
      
      <profile>
         <id>glassfish</id>
         <dependencies>
           <dependency>
             <groupId>joda-time</groupId>
             <artifactId>joda-time</artifactId>         
           </dependency>
         </dependencies>
      </profile>         
      
      <profile>
         <id>ftest</id>
         <properties>
            <selenium.browser>*chrome</selenium.browser>
            <context.host>www.openid-rp.com</context.host>
            <context.root>http://${context.host}:8080/</context.root>
            <context.deploy.path>${context.path}</context.deploy.path>
         </properties>
      </profile>
   </profiles>   
   
</project>
